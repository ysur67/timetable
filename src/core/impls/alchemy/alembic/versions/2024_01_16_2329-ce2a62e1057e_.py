"""empty message

Revision ID: ce2a62e1057e
Revises:
Create Date: 2024-01-16 23:29:58.557582

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ce2a62e1057e"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "classroom",
        sa.Column("id", sa.String(length=32), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classroom")),
    )
    op.create_table(
        "educational_level",
        sa.Column("id", sa.String(length=32), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_educational_level")),
    )
    op.create_table(
        "subject",
        sa.Column("id", sa.String(length=32), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_subject")),
    )
    op.create_table(
        "teacher",
        sa.Column("id", sa.String(length=32), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_teacher")),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.String(length=32), nullable=False),
        sa.Column("telegram_id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
    )
    op.create_table(
        "group",
        sa.Column("id", sa.String(length=32), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("level_id", sa.String(length=32), nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["level_id"],
            ["educational_level.id"],
            name=op.f("fk_group_level_id_educational_level"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_group")),
    )
    op.create_table(
        "lesson",
        sa.Column("id", sa.String(length=32), nullable=False),
        sa.Column("date_", sa.Date(), nullable=False),
        sa.Column("time_start", sa.Time(), nullable=False),
        sa.Column("time_end", sa.Time(), nullable=False),
        sa.Column("group_id", sa.String(length=32), nullable=False),
        sa.Column("teacher_id", sa.String(length=32), nullable=True),
        sa.Column("subject_id", sa.String(length=32), nullable=True),
        sa.Column("classroom_id", sa.String(length=32), nullable=True),
        sa.Column("link", sa.String(), nullable=False),
        sa.Column("note", sa.String(), nullable=False),
        sa.Column("hash_", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["classroom_id"],
            ["classroom.id"],
            name=op.f("fk_lesson_classroom_id_classroom"),
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["group.id"],
            name=op.f("fk_lesson_group_id_group"),
        ),
        sa.ForeignKeyConstraint(
            ["subject_id"],
            ["subject.id"],
            name=op.f("fk_lesson_subject_id_subject"),
        ),
        sa.ForeignKeyConstraint(
            ["teacher_id"],
            ["teacher.id"],
            name=op.f("fk_lesson_teacher_id_teacher"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_lesson")),
    )
    op.create_table(
        "user_preferences",
        sa.Column("id", sa.String(length=32), nullable=False),
        sa.Column("selected_group_id", sa.String(length=32), nullable=True),
        sa.Column("report_days_offset", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(length=32), nullable=False),
        sa.ForeignKeyConstraint(
            ["selected_group_id"],
            ["group.id"],
            name=op.f("fk_user_preferences_selected_group_id_group"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_user_preferences_user_id_user"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_preferences")),
        sa.UniqueConstraint("user_id", name=op.f("uq_user_preferences_user_id")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_preferences")
    op.drop_table("lesson")
    op.drop_table("group")
    op.drop_table("user")
    op.drop_table("teacher")
    op.drop_table("subject")
    op.drop_table("educational_level")
    op.drop_table("classroom")
    # ### end Alembic commands ###
